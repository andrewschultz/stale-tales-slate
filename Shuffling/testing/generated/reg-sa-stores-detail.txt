## reg-sa-stores-detail.txt
## GENERATOR FILE: rbr-sa-stores.txt

## walkthrough with ask/scan/pad detail

** game: /home/andrew/prt/debug-shuffling.ulx
** interpreter: /home/andrew/prt/glulxe -q
** checkclass: /home/andrew/prt/extracc.py

* stores-thru

# the Z is just so we have a turn processed so Inform doesn't balk and say "nothing to undo"
>z
>opt in
>poss

>ts
/^Trips Strip

#gadget test: store b to sorbet
>rc store b
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: GRBBBB (R = red, G = green, B = blue).
The gadget beeps once. A series of lights comes across: GRRRGR (R = red, G = green).
DEBUG INFO: Rect-text: S----T.
DEBUG INFO: Cert-text: S---E-.

#gadget test: bertos to sorbet (marquee reading BERTOS)
>rc marquee
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: BBBRBG.
The gadget beeps once. A series of lights comes across: RRGRRR.
DEBUG INFO: Rect-text: S----T.
DEBUG INFO: Cert-text: --R---.

#gadget test: storef to forest
>rc store f
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: BRBBBG.
The gadget beeps once. A series of lights comes across: RRRRRR.
DEBUG INFO: Rect-text: F----T.
DEBUG INFO: Cert-text: ------.

#gadget test: store i to sortie
>rc store i
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: GBBBRB.
The gadget beeps once. A series of lights comes across: GRRRRR.
DEBUG INFO: Rect-text: S----E.
DEBUG INFO: Cert-text: S-----.

#gadget test: store m to metros
>rc store m
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: RBBBBG.
The gadget beeps once. A series of lights comes across: RRRGRR.
DEBUG INFO: Rect-text: M----S.
DEBUG INFO: Cert-text: ---R--.

#gadget test: store r to resort
>rc store r
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: BRBGBB.
The gadget beeps once. A series of lights comes across: RRRRRR.
DEBUG INFO: Rect-text: R----T.
DEBUG INFO: Cert-text: ------.

#gadget test: roster to resort
>rc roster
You get to scanning, twiddling from certify to rectify and back.
Most of the screen goes blue. Then a green dot and red dot bounce left and right across the gadget screen until they stabilize: GBBRBB.
The gadget beeps once. A series of lights comes across: GRGRRR.
DEBUG INFO: Rect-text: R----T.
DEBUG INFO: Cert-text: R-S---.

>forest
by one point

>score
You currently have 1 out of 6 total points for the Stores region. Your minimum possible score on solving is 4, and the maximum is 6

>sortie
by one point

>score
You currently have 2 out of 6 total points for the Stores region. Your minimum possible score on solving is 4, and the maximum is 6

>metros
by one point

>score
You currently have 3 out of 6 total points for the Stores region. Your minimum possible score on solving is 4, and the maximum is 6

>n
hubs bush

>sorbet
by one point

>score
You currently have 4 out of 6 total points for the Stores region. Your minimum possible score on solving is 5, and the maximum is 6

