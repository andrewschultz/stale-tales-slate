Shuffling Around release 6 contains no new puzzles, so if you won release 5, there's no need to look again. Most is just code optimization, which sounds boring, but in practical terms, it means the game runs a lot faster now.

A. DiBianca, whose games you should DEFINITELY check (https://adibianca.itch.io/) if you liked Shuffling, came through with a neat transcript, as did Olaf Nowacki (https://fumbaloaoa.itch.io/). So thanks to them!

As for what's changed? Speed was the main focus of this release, and not in the "take less than five years to update things this time" sense.
  --Shuffling Around now runs much faster, especially when you type in a command the parser doesn't recognize. Some code said "touchable" instead of my own custom definition "fungible." My definition isn't better, per se, but it fits the bill. In fact, it's less thorough, and it checks for a lot less: namely, if something is in the location of the player, or if you carry it, or if it's a backdrop, you can see it around. I also shuffled (ha ha) some things that were part of other objects or inside containers to be scenery, to simplify the "fungible" code. At first I noted that changing touchable to fungible in a critical area sped things up by a factor of 2.5 (60% faster.) Then once I replaced all "touchable" occurrences, I noticed a roughly 20% reduction (25% speed) increase.
  --Another cause of speedup was breaking "after reading a command" if-statements into rules-by-region. Inform is slow with REGEX, so when I had (not the precise code, but enough to give the idea):
	if the player's command matches the regular expression "^<0-9>+$" and location of player is Trap Part and centrifuge-stopped is false:
		say "(turning the dial)[line break]";
	if the player's command matches the regular expression "buttons":
		if <redacted spoiler>, say "One button at a time, please." instead;

  In "after reading a command," I converted this to
	  abide by the custom-parse rule of map region of location of player;

  this is the behind-store-i-parse rule:
	  if location of player is Trap Part:
		  if centrifuge-stopped is false and the player's command matches the regular expression "^<0-9>+$":
			  say "(turning the dial)[line break]";
	  if location of player is moor and panel is part of silo:
		  if the player's command matches the regular expression "buttons", say "One button at a time, please." instead;

  My initial instinct was to put the text condition first so I knew what did what, but when I put the easiest-to-check conditions first, things ran faster. It turns out once I sorted things into by-store rules, they were small and readable enough, I could indent the regex rules.

Also, the door to the east at the start of Store M was simplified. It now closes right after you enter. When I started programming it long ago, I assumed Inform had to see it as a door, but in fact it worked better when defined as a backdrop. This is parallel to how programmers define dead people as scenery so TALK TO DEAD PERSON doesn't give odd results.

There is also a bit better parsing of failed anagrams, made possible by the big speedups I found. Something like DRAINEGE instead of DRAINAGE will now note you have the right letters in the wrong order. Also, dropping a plural when it is needed will be noted, too. For instance, "attic" in the introduction or "one" in Store F will now note that plurality matters.

There were individual bugs, as well.
-- make it so the player gets the right clues for the cabinet. I'd changed it from release 2, and I thought I looked through things, but I forgot a check rule. Also I forgot to put it in my tests, for whatever reason.
-- fixed NO TIP acknowledgment text. It was setting the option correctly but notifying the player incorrectly.
-- PUT ALL ON/IN (STORE I ITEM) command is now allowed, to save the player three moves if they try it. You'll know when you get there.
-- fixed ALT command at the end when you are told which Softer/Rest of Forest guiders (thorn, shout, etc.) you saw and which you didn't. In your transcript I saw "(north) (south) (east) (west)" -- so there was 1) a bug detecting which directions were used in the forest and 2) a bug displaying the right directions.
-- add check to make sure that cabinet does not have a faint haze if you guessed it.
-- clarify that you will wear the beard implicitly when it is completed.
-- expand lemon/melon example in case the colors are not visible.
-- make implicit peeling clearer when you TAKE a liver but have chisel.
-- fixed duplicate "deer and goat are both here" when looking in Thickets.
-- DROP HAY response had extra text because I forgot an "instead"

I also added a few mistakes and such and text flavor. Nothing too critical. I developed a suite of 1702 test cases that had to pass before this release went out the door, which gives reasonable confidence that gross technical bugs have been removed. Of course, there's a possibility I was blindsided.

Thanks to A. DiBianca for poking me with a transcript and a note the web version ran slow. Thanks to Olaf Nowacki for transcripts.
